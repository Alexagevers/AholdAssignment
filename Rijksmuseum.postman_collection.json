{
	"info": {
		"_postman_id": "f282b3da-1695-4afc-af41-d0e2e8c771eb",
		"name": "Rijksmuseum",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36439539"
	},
	"item": [
		{
			"name": "Request collection",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"",
							"pm.test(\"Validate the structure of the artObjects array\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData.artObjects).to.be.an('array').with.length.above(0);",
							"",
							"    responseData.artObjects.forEach(function (artObject) {",
							"        pm.expect(artObject).to.have.property('id').that.is.a('string');",
							"        pm.expect(artObject).to.have.property('objectNumber').that.is.a('string');",
							"        pm.expect(artObject).to.have.property('title').that.is.a('string');",
							"        pm.expect(artObject).to.have.property('principalOrFirstMaker').that.is.a('string');",
							"        pm.expect(artObject).to.have.property('webImage').that.is.an('object');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Production places array is present and contains valid data\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.artObjects).to.be.an('array');",
							"    pm.expect(responseData.artObjects).to.not.be.empty;",
							"    responseData.artObjects.forEach(function(artObject) {",
							"        pm.expect(artObject.productionPlaces).to.be.an('array');",
							"        pm.expect(artObject.productionPlaces).to.not.be.empty;",
							"        artObject.productionPlaces.forEach(function(place) {",
							"            pm.expect(place).to.be.a('string');",
							"        });",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Count and countFacets should be non-negative integers\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.count).to.be.a('number').and.to.be.at.least(0);",
							"    pm.expect(responseData.countFacets.hasimage).to.be.a('number').and.to.be.at.least(0);",
							"    pm.expect(responseData.countFacets.ondisplay).to.be.a('number').and.to.be.at.least(0);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.rijksmuseum.nl/api/nl/collection?key={{api-key}}&involvedMaker=Rembrandt+van+Rijn",
					"protocol": "https",
					"host": [
						"www",
						"rijksmuseum",
						"nl"
					],
					"path": [
						"api",
						"nl",
						"collection"
					],
					"query": [
						{
							"key": "key",
							"value": "{{api-key}}"
						},
						{
							"key": "involvedMaker",
							"value": "Rembrandt+van+Rijn"
						},
						{
							"key": "object-number",
							"value": "nl-SK-C-5",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Collection Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"ArtObject and ArtObjectPage have the correct structure\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.artObject).to.be.an('object');",
							"    pm.expect(responseData.artObjectPage).to.be.an('object');",
							"});",
							"",
							"",
							"pm.test(\"WebImage object contains required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.artObject.webImage).to.be.an('object');",
							"    pm.expect(responseData.artObject.webImage.guid).to.be.a('string');",
							"    pm.expect(responseData.artObject.webImage.offsetPercentageX).to.be.a('number');",
							"    pm.expect(responseData.artObject.webImage.offsetPercentageY).to.be.a('number');",
							"    pm.expect(responseData.artObject.webImage.width).to.be.a('number');",
							"    pm.expect(responseData.artObject.webImage.height).to.be.a('number');",
							"    pm.expect(responseData.artObject.webImage.url).to.be.a('string');",
							"});",
							"",
							"",
							"pm.test(\"Principal makers array contains required fields\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData.artObject.principalMakers).to.be.an('array').and.to.not.be.empty;",
							"",
							"    responseData.artObject.principalMakers.forEach(function(maker) {",
							"        pm.expect(maker).to.have.property('name').that.is.a('string').and.to.not.be.empty;",
							"        pm.expect(maker).to.have.property('placeOfBirth').that.is.a('string');",
							"        pm.expect(maker).to.have.property('dateOfBirth').that.is.a('string');",
							"        pm.expect(maker).to.have.property('dateOfDeath').that.is.a('string');",
							"        pm.expect(maker).to.have.property('placeOfDeath').that.is.a('string');",
							"        pm.expect(maker).to.have.property('occupation').that.is.an('array');",
							"        pm.expect(maker).to.have.property('roles').that.is.an('array');",
							"        pm.expect(maker).to.have.property('nationality').that.is.a('string');",
							"        pm.expect(maker).to.have.property('biography').that.is.null.or.a('string');",
							"        pm.expect(maker).to.have.property('productionPlaces').that.is.an('array');",
							"        pm.expect(maker).to.have.property('qualification').that.is.null.or.a('string');",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.rijksmuseum.nl/api/nl/collection/SK-C-5?key={{api-key}}",
					"protocol": "https",
					"host": [
						"www",
						"rijksmuseum",
						"nl"
					],
					"path": [
						"api",
						"nl",
						"collection",
						"SK-C-5"
					],
					"query": [
						{
							"key": "involvedMaker",
							"value": "Rembrandt+van+Rijn",
							"disabled": true
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Collection Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Validate the levels object\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.levels).to.exist.and.to.be.an('array').that.is.not.empty;",
							"});",
							"",
							"",
							"pm.test(\"Validate the tiles array within levels\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.levels).to.be.an('array');",
							"    ",
							"    responseData.levels.forEach(function(level) {",
							"        pm.expect(level.tiles).to.be.an('array');",
							"        ",
							"        level.tiles.forEach(function(tile) {",
							"            pm.expect(tile.x).to.exist.and.to.be.a('number', \"x value should not be empty\");",
							"            pm.expect(tile.y).to.exist.and.to.be.a('number', \"y value should not be empty\");",
							"            pm.expect(tile.url).to.exist.and.to.be.a('string', \"URL value should not be empty\");",
							"            pm.expect(tile.url).to.have.length.above(0, \"URL value should not be empty\");",
							"        });",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.rijksmuseum.nl/api/nl/collection/SK-C-5/tiles?key={{api-key}}",
					"protocol": "https",
					"host": [
						"www",
						"rijksmuseum",
						"nl"
					],
					"path": [
						"api",
						"nl",
						"collection",
						"SK-C-5",
						"tiles"
					],
					"query": [
						{
							"key": "object-number",
							"value": "nl-SK-C-5",
							"disabled": true
						},
						{
							"key": "key",
							"value": "{{api-key}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "api-key",
			"value": "0fiuZFh4"
		}
	]
}